#!/usr/bin/env python3

import argparse
from filetree import *


parser = argparse.ArgumentParser(description='compare two filetrees')

parser.add_argument('patha', metavar='patha', type=str,
                    help="str for path a")
parser.add_argument('pathb', metavar='pathb', type=str,
                    help="str for path b")
parser.add_argument('-o', "--operation", metavar='op', type=str,
                    help="comparison type selection size/set/bin")

args = parser.parse_args()


def run_sizecomp():
    res_size = compare_size(fta, ftb)
    print(">>> Same Size:   {}".format(res_size.result))
    if not res_size.result:
        print("A: {}, B: {}".format(res_size.na, res_size.nb))

def run_setcomp():
    res_set = compare_set(fta, ftb)
    print(">>> Same Set:    {}".format(res_set.result))
    if not res_set.result:
        print(">>> Missing in A:\n{}".format("\n".join(res_set.missing_a)))
        print(">>> Missing in B:\n{}".format("\n".join(res_set.missing_b)))

def run_bincomp():
    res_bin = compare_binary(fta, ftb)
    print(">>> Same Binary: {}".format(res_bin.result))
    if not res_bin.result:
        print(">>> Differing Files:\n{}".format("\n".join(res_bin.diff)))

try:
    fta = Filetree(args.patha, "a")
    ftb = Filetree(args.pathb, "b")
    if args.operation == "size":
        run_sizecomp()
    elif args.operation == "set":
        run_setcomp()
    elif args.operation == "bin":
        run_bincomp()
    else:
        run_sizecomp()
        run_setcomp()
        run_bincomp()
except FileNotFoundError:
    print("Provide valid directory paths")
